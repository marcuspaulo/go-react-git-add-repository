{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\nvar middlewares = [];\nvar sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nvar sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\nvar createAppropriateStore = process.env.NODE_ENV === 'development' ? console.tron.createStore : createStore;\nvar store = createAppropriateStore(reducers, compose(applyMiddleware.apply(void 0, middlewares)));\nsagaMiddleware.run(sagas);\nexport default store;","map":{"version":3,"sources":["/Users/marcus/DESENVOLVIMENTO/rocketseat/cursos/goreact/go-react-nova-aplicacao/src/store/index.js"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","reducers","sagas","middlewares","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","push","createAppropriateStore","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,WAAW,GAAG,EAApB;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EAAzC,GAA4E,IAAhG;AAEA,IAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AAEAG,WAAW,CAACS,IAAZ,CAAiBD,cAAjB;AAEA,IAAME,sBAAsB,GAAGR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,OAAO,CAACC,IAAR,CAAaZ,WAAtD,GAAoEA,WAAnG;AAEA,IAAMiB,KAAK,GAAGD,sBAAsB,CAACZ,QAAD,EAAWH,OAAO,CAACC,eAAe,MAAf,SAAmBI,WAAnB,CAAD,CAAlB,CAApC;AAEAQ,cAAc,CAACI,GAAf,CAAmBb,KAAnB;AAEA,eAAeY,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst middlewares = [];\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nmiddlewares.push(sagaMiddleware);\n\nconst createAppropriateStore = process.env.NODE_ENV === 'development' ? console.tron.createStore : createStore;\n\nconst store = createAppropriateStore(reducers, compose(applyMiddleware(...middlewares)));\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}