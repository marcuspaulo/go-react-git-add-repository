{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar isCreateSocketValid = function isCreateSocketValid(e) {\n  return null != e;\n},\n    isHostValid = function isHostValid(e) {\n  return \"string\" == typeof e && e && \"\" !== e;\n},\n    isPortValid = function isPortValid(e) {\n  return \"number\" == typeof e && 1 <= e && e <= 65535;\n},\n    onCommandValid = function onCommandValid(e) {\n  return \"function\" == typeof e;\n},\n    validate = function validate(e) {\n  var n = e.createSocket,\n      t = e.host,\n      r = e.port,\n      o = e.onCommand;\n  if (!isCreateSocketValid(n)) throw new Error(\"invalid createSocket function\");\n  if (!isHostValid(t)) throw new Error(\"invalid host\");\n  if (!isPortValid(r)) throw new Error(\"invalid port\");\n  if (!onCommandValid(o)) throw new Error(\"invalid onCommand handler\");\n},\n    logger = function logger() {\n  return function (r) {\n    return {\n      features: {\n        log: function log() {\n          for (var e = [], n = 0; n < arguments.length; n++) {\n            e[n] = arguments[n];\n          }\n\n          var t = e && 1 === e.length ? e[0] : e;\n          r.send(\"log\", {\n            level: \"debug\",\n            message: t\n          }, !1);\n        },\n        logImportant: function logImportant() {\n          for (var e = [], n = 0; n < arguments.length; n++) {\n            e[n] = arguments[n];\n          }\n\n          var t = e && 1 === e.length ? e[0] : e;\n          r.send(\"log\", {\n            level: \"debug\",\n            message: t\n          }, !0);\n        },\n        debug: function debug(e, n) {\n          return void 0 === n && (n = !1), r.send(\"log\", {\n            level: \"debug\",\n            message: e\n          }, !!n);\n        },\n        warn: function warn(e) {\n          return r.send(\"log\", {\n            level: \"warn\",\n            message: e\n          }, !0);\n        },\n        error: function error(e, n) {\n          return r.send(\"log\", {\n            level: \"error\",\n            message: e,\n            stack: n\n          }, !0);\n        }\n      }\n    };\n  };\n},\n    image = function image() {\n  return function (a) {\n    return {\n      features: {\n        image: function image(e) {\n          var n = e.uri,\n              t = e.preview,\n              r = e.filename,\n              o = e.width,\n              i = e.height,\n              s = e.caption;\n          return a.send(\"image\", {\n            uri: n,\n            preview: t,\n            filename: r,\n            width: o,\n            height: i,\n            caption: s\n          });\n        }\n      }\n    };\n  };\n},\n    benchmark = function benchmark() {\n  return function (i) {\n    var s = i.startTimer;\n    return {\n      features: {\n        benchmark: function benchmark(n) {\n          var r = [],\n              o = s(),\n              t = function t(e) {\n            var n = 0 === r.length ? 0 : r[r.length - 1].time,\n                t = o();\n            r.push({\n              title: e,\n              time: t,\n              delta: t - n\n            });\n          };\n\n          r.push({\n            title: n,\n            time: 0,\n            delta: 0\n          });\n\n          var e = function e(_e) {\n            t(_e), i.send(\"benchmark.report\", {\n              title: n,\n              steps: r\n            });\n          };\n\n          return {\n            step: t,\n            stop: e,\n            last: e\n          };\n        }\n      }\n    };\n  };\n},\n    stateResponses = function stateResponses() {\n  return function (r) {\n    return {\n      features: {\n        stateActionComplete: function stateActionComplete(e, n, t) {\n          return void 0 === t && (t = !1), r.send(\"state.action.complete\", {\n            name: e,\n            action: n\n          }, !!t);\n        },\n        stateValuesResponse: function stateValuesResponse(e, n, t) {\n          return void 0 === t && (t = !0), r.send(\"state.values.response\", {\n            path: e,\n            value: n,\n            valid: t\n          });\n        },\n        stateKeysResponse: function stateKeysResponse(e, n, t) {\n          return void 0 === t && (t = !0), r.send(\"state.keys.response\", {\n            path: e,\n            keys: n,\n            valid: t\n          });\n        },\n        stateValuesChange: function stateValuesChange(e) {\n          return r.send(\"state.values.change\", {\n            changes: e\n          });\n        },\n        stateBackupResponse: function stateBackupResponse(e) {\n          return r.send(\"state.backup.response\", {\n            state: e\n          });\n        }\n      }\n    };\n  };\n},\n    apiResponse = function apiResponse() {\n  return function (o) {\n    return {\n      features: {\n        apiResponse: function apiResponse(e, n, t) {\n          var r = !(n && n.status && \"number\" == typeof n.status && 200 <= n.status && n.status <= 299);\n          o.send(\"api.response\", {\n            request: e,\n            response: n,\n            duration: t\n          }, r);\n        }\n      }\n    };\n  };\n},\n    clear = function clear() {\n  return function (e) {\n    return {\n      features: {\n        clear: function clear() {\n          return e.send(\"clear\");\n        }\n      }\n    };\n  };\n},\n    UNDEFINED = \"~~~ undefined ~~~\",\n    NULL = \"~~~ null ~~~\",\n    FALSE = \"~~~ false ~~~\",\n    ZERO = \"~~~ zero ~~~\",\n    EMPTY_STRING = \"~~~ empty string ~~~\",\n    CIRCULAR = \"~~~ Circular Reference ~~~\",\n    ANONYMOUS = \"~~~ anonymous function ~~~\",\n    INFINITY = \"~~~ Infinity ~~~\",\n    NEGATIVE_INFINITY = \"~~~ -Infinity ~~~\";\n\nfunction getFunctionName(e) {\n  var n = e.name;\n  return null == n || \"\" === n ? ANONYMOUS : \"~~~ \" + n + \"() ~~~\";\n}\n\nfunction serialize(e) {\n  var r,\n      o = [];\n  return JSON.stringify(e, (r = null, function (e, n) {\n    if (!0 === n) return !0;\n    if (n === 1 / 0) return INFINITY;\n    if (n === -1 / 0) return NEGATIVE_INFINITY;\n    if (0 === n) return ZERO;\n    if (void 0 === n) return UNDEFINED;\n    if (null === n) return NULL;\n    if (!1 === n) return FALSE;\n    if (-0 === n) return ZERO;\n    if (\"\" === n) return EMPTY_STRING;\n\n    switch (typeof n) {\n      case \"string\":\n      case \"number\":\n        return n;\n\n      case \"function\":\n        return getFunctionName(n);\n    }\n\n    if (0 < o.length) {\n      var t = o.indexOf(this);\n      ~t ? o.splice(t + 1) : o.push(this), ~o.indexOf(n) && (n = CIRCULAR);\n    } else o.push(n);\n\n    return null == r ? n : r.call(this, e, n);\n  }));\n}\n\nvar defaultPerformanceNow = function defaultPerformanceNow(e) {\n  return Date.now();\n},\n    nativePerformance = \"undefined\" != typeof window && window && (window.performance || window.msPerformance || window.webkitPerformance),\n    performanceNow = defaultPerformanceNow,\n    delta = function delta(e) {\n  return performanceNow() - e;\n};\n\nglobal.nativePerformanceNow ? performanceNow = global.nativePerformanceNow : nativePerformance && (performanceNow = function performanceNow() {\n  return nativePerformance.now && nativePerformance.now();\n});\n\nvar start = function start() {\n  var e = performanceNow();\n  return function () {\n    return delta(e);\n  };\n},\n    _assign = function __assign() {\n  return (_assign = Object.assign || function (e) {\n    for (var n, t = 1, r = arguments.length; t < r; t++) {\n      for (var o in n = arguments[t]) {\n        Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);\n      }\n    }\n\n    return e;\n  }).apply(this, arguments);\n},\n    corePlugins = [image(), logger(), benchmark(), stateResponses(), apiResponse(), clear()],\n    DEFAULT_OPTIONS = {\n  createSocket: null,\n  host: \"localhost\",\n  port: 9090,\n  name: \"reactotron-core-client\",\n  secure: !1,\n  plugins: corePlugins,\n  safeRecursion: !0,\n  onCommand: function onCommand(e) {\n    return null;\n  },\n  onConnect: function onConnect() {\n    return null;\n  },\n  onDisconnect: function onDisconnect() {\n    return null;\n  }\n},\n    reservedFeatures = [\"options\", \"connected\", \"socket\", \"plugins\", \"configure\", \"connect\", \"send\", \"use\", \"startTimer\"],\n    isReservedFeature = function isReservedFeature(n) {\n  return reservedFeatures.some(function (e) {\n    return e === n;\n  });\n};\n\nfunction emptyPromise() {\n  return Promise.resolve(\"\");\n}\n\nvar Client = function () {\n  function e() {\n    var s = this;\n    this.options = Object.assign({}, DEFAULT_OPTIONS), this.connected = !1, this.socket = null, this.plugins = [], this.sendQueue = [], this.isReady = !1, this.lastMessageDate = new Date(), this.customCommands = [], this.customCommandLatestId = 1, this.startTimer = function () {\n      return start();\n    }, this.send = function (e, n, t) {\n      if (void 0 === n && (n = {}), void 0 === t && (t = !1), s.socket) {\n        var r = new Date(),\n            o = r.getTime() - s.lastMessageDate.getTime();\n        o < 0 && (o = 0);\n        var i = serialize({\n          type: e,\n          payload: n,\n          important: !!t,\n          date: (s.lastMessageDate = r).toISOString(),\n          deltaTime: o\n        });\n        s.isReady ? s.socket.send(i) : s.sendQueue.push(i);\n      }\n    };\n  }\n\n  return e.prototype.configure = function (e) {\n    var n = this;\n    void 0 === e && (e = {});\n    var t = Object.assign({}, this.options, e);\n    return validate(t), this.options = t, Array.isArray(this.options.plugins) && this.options.plugins.forEach(function (e) {\n      return n.use(e);\n    }), this;\n  }, e.prototype.close = function () {\n    this.connected = !1, this.socket && this.socket.close && this.socket.close();\n  }, e.prototype.connect = function () {\n    var t = this;\n    this.connected = !0;\n\n    var e = this.options,\n        n = e.createSocket,\n        r = e.secure,\n        o = e.host,\n        i = e.environment,\n        s = e.port,\n        a = e.name,\n        u = e.client,\n        c = void 0 === u ? {} : u,\n        f = e.getClientId,\n        l = this.options,\n        d = l.onCommand,\n        m = l.onConnect,\n        p = l.onDisconnect,\n        h = n((r ? \"wss\" : \"ws\") + \"://\" + o + \":\" + s),\n        g = function g() {\n      m && m(), t.plugins.forEach(function (e) {\n        return e.onConnect && e.onConnect();\n      }), (f || emptyPromise)().then(function (e) {\n        for (t.isReady = !0, t.send(\"client.intro\", _assign({\n          environment: i\n        }, c, {\n          name: a,\n          clientId: e,\n          reactotronCoreClientVersion: \"2.1.4\"\n        })); 0 < t.sendQueue.length;) {\n          var n = t.sendQueue[0];\n          t.sendQueue = t.sendQueue.slice(1), t.socket.send(n);\n        }\n      });\n    },\n        v = function v() {\n      t.isReady = !1, p && p(), t.plugins.forEach(function (e) {\n        return e.onDisconnect && e.onDisconnect();\n      });\n    },\n        w = function w(e) {\n      var n = JSON.parse(e);\n      d && d(n), t.plugins.forEach(function (e) {\n        return e.onCommand && e.onCommand(n);\n      }), \"custom\" === n.type ? t.customCommands.filter(function (e) {\n        return e.command === n.payload;\n      }).forEach(function (e) {\n        return e.handler();\n      }) : \"setClientId\" === n.type && t.options.setClientId && t.options.setClientId(n.payload);\n    };\n\n    return h.on ? (h.on(\"open\", g), h.on(\"close\", v), h.on(\"message\", w)) : (h.onopen = g, h.onclose = v, h.onmessage = function (e) {\n      return w(e.data);\n    }), this.socket = h, this;\n  }, e.prototype.display = function (e) {\n    void 0 === e && (e = {});\n    var n = e.name,\n        t = e.value,\n        r = e.preview,\n        o = e.image,\n        i = e.important,\n        s = void 0 !== i && i,\n        a = {\n      name: n,\n      value: t || null,\n      preview: r || null,\n      image: o || null\n    };\n    this.send(\"display\", a, s);\n  }, e.prototype.reportError = function (e) {\n    this.error(e);\n  }, e.prototype.use = function (e) {\n    var t = this;\n    if (\"function\" != typeof e) throw new Error(\"plugins must be a function\");\n    var r = e.bind(this)(this);\n    if (\"object\" != typeof r) throw new Error(\"plugins must return an object\");\n\n    if (r.features) {\n      if (\"object\" != typeof r.features) throw new Error(\"features must be an object\");\n      Object.keys(r.features).forEach(function (e) {\n        return function (e) {\n          var n = r.features[e];\n          if (\"function\" != typeof n) throw new Error(\"feature \" + e + \" is not a function\");\n          if (isReservedFeature(e)) throw new Error(\"feature \" + e + \" is a reserved name\");\n          t[e] = n;\n        }(e);\n      });\n    }\n\n    return this.plugins.push(r), r.onPlugin && \"function\" == typeof r.onPlugin && r.onPlugin.bind(this)(this), this;\n  }, e.prototype.onCustomCommand = function (e, n) {\n    var t = this,\n        r = {\n      id: this.customCommandLatestId,\n      command: e,\n      handler: n\n    };\n    return this.customCommandLatestId += 1, this.customCommands.push(r), this.send(\"customCommand.register\", {\n      id: r.id,\n      command: r.command\n    }), function () {\n      t.customCommands = t.customCommands.filter(function (e) {\n        return e.id !== r.id;\n      }), t.send(\"customCommand.unregister\", {\n        id: r.id,\n        command: r.command\n      });\n    };\n  }, e;\n}();\n\nfunction createClient(e) {\n  var n = new Client();\n  return n.configure(e), n;\n}\n\nexports.corePlugins = corePlugins, exports.Client = Client, exports.createClient = createClient;","map":null,"metadata":{},"sourceType":"script"}