{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marcus/DESENVOLVIMENTO/rocketseat/cursos/goreact/go-react-nova-aplicacao/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addFavorite);\n\nimport { call, put, select } from 'redux-saga/effects';\nimport api from '../../services/api';\nimport { Creators as FavoriteActions } from '../ducks/favorites';\nexport function addFavorite(action) {\n  var _ref, data, isDuplicated, repositoryData;\n\n  return _regeneratorRuntime.wrap(function addFavorite$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.get, \"/repos/\".concat(action.payload.repository));\n\n        case 3:\n          _ref = _context.sent;\n          data = _ref.data;\n          _context.next = 7;\n          return select(function (state) {\n            return state.favorites.data.find(function (favorite) {\n              return favorite.id === data.id;\n            });\n          });\n\n        case 7:\n          isDuplicated = _context.sent;\n\n          if (!isDuplicated) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 11;\n          return put(FavoriteActions.addFavoriteFailure('Reposit贸rio duplicado'));\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          repositoryData = {\n            id: data.id,\n            name: data.full_name,\n            description: data.description,\n            url: data.html_url\n          };\n          _context.next = 16;\n          return put(FavoriteActions.addFavoriteSuccess(repositoryData));\n\n        case 16:\n          _context.next = 22;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 22;\n          return put(FavoriteActions.addFavoriteFailure('Erro ao adicionar reposit贸rio'));\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 18]]);\n}","map":{"version":3,"sources":["/Users/marcus/DESENVOLVIMENTO/rocketseat/cursos/goreact/go-react-nova-aplicacao/src/store/sagas/favorites.js"],"names":["addFavorite","call","put","select","api","Creators","FavoriteActions","action","get","payload","repository","data","state","favorites","find","favorite","id","isDuplicated","addFavoriteFailure","repositoryData","name","full_name","description","url","html_url","addFavoriteSuccess"],"mappings":";;;;yBAKiBA,W;;AALjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,QAAQ,IAAIC,eAArB,QAA4C,oBAA5C;AAEA,OAAO,SAAUN,WAAV,CAAsBO,MAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMN,IAAI,CAACG,GAAG,CAACI,GAAL,mBAAoBD,MAAM,CAACE,OAAP,CAAeC,UAAnC,EAAV;;AAFd;AAAA;AAEKC,UAAAA,IAFL,QAEKA,IAFL;AAAA;AAIkB,iBAAMR,MAAM,CAAC,UAAAS,KAAK;AAAA,mBAAIA,KAAK,CAACC,SAAN,CAAgBF,IAAhB,CAAqBG,IAArB,CAA0B,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,EAAT,KAAgBL,IAAI,CAACK,EAAzB;AAAA,aAAlC,CAAJ;AAAA,WAAN,CAAZ;;AAJlB;AAIGC,UAAAA,YAJH;;AAAA,eAMCA,YAND;AAAA;AAAA;AAAA;;AAAA;AAOD,iBAAMf,GAAG,CAACI,eAAe,CAACY,kBAAhB,CAAmC,uBAAnC,CAAD,CAAT;;AAPC;AAAA;AAAA;;AAAA;AASKC,UAAAA,cATL,GASsB;AACrBH,YAAAA,EAAE,EAAEL,IAAI,CAACK,EADY;AAErBI,YAAAA,IAAI,EAAET,IAAI,CAACU,SAFU;AAGrBC,YAAAA,WAAW,EAAEX,IAAI,CAACW,WAHG;AAIrBC,YAAAA,GAAG,EAAEZ,IAAI,CAACa;AAJW,WATtB;AAAA;AAeD,iBAAMtB,GAAG,CAACI,eAAe,CAACmB,kBAAhB,CAAmCN,cAAnC,CAAD,CAAT;;AAfC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkBH,iBAAMjB,GAAG,CAACI,eAAe,CAACY,kBAAhB,CAAmC,+BAAnC,CAAD,CAAT;;AAlBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, select } from 'redux-saga/effects';\nimport api from '../../services/api';\n\nimport { Creators as FavoriteActions } from '../ducks/favorites';\n\nexport function* addFavorite(action) {\n  try {\n    const { data } = yield call(api.get, `/repos/${action.payload.repository}`);\n\n    const isDuplicated = yield select(state => state.favorites.data.find(favorite => favorite.id === data.id));\n\n    if (isDuplicated) {\n      yield put(FavoriteActions.addFavoriteFailure('Reposit贸rio duplicado'));\n    } else {\n      const repositoryData = {\n        id: data.id,\n        name: data.full_name,\n        description: data.description,\n        url: data.html_url,\n      };\n      yield put(FavoriteActions.addFavoriteSuccess(repositoryData));\n    }\n  } catch (err) {\n    yield put(FavoriteActions.addFavoriteFailure('Erro ao adicionar reposit贸rio'));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}